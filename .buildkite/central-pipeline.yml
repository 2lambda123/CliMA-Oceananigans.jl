env:
  JULIA_VERSION: "1.6.0"
  OPENMPI_VERSION: "4.0.4"
  CUDA_VERSION: "10.2"
  OPENBLAS_NUM_THREADS: 1

steps:
  - label: "init :computer:"
    key: "init_cpu"
    command:
      - "julia --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(; strict=true)'"
      - "julia --project -e 'using Pkg; Pkg.status()'"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: "init :flower_playing_cards:"
    key: "init_gpu"
    env:
      - CUDA_VERSION: "10.2"
    command:
      - "julia --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(; strict=true)'"

      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"
      - "julia --project -e 'using CUDA; CUDA.versioninfo()'"

      - "julia --project -e 'using Pkg; Pkg.status()'"
    agents:
      config: gpu
      queue: central
      slurm_ntasks: 1
      slurm_gres: "gpu:1"

  - wait
  
# Note on slurm syntax:
# Slurm specifications are passed to agent matrix
# Keys starting with "slurm_" are converted to slurm commands
# Example: the key "slurm_ntasks: 1" is converted to "-ntasks=1"

  - label: "üêøÔ∏è gpu unit tests"
    env:
      TEST_GROUP: "unit"
    commands:
      - "julia -O0 --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      config: gpu
      queue: central
      slurm_ntasks: 1
      slurm_gres: "gpu:1"
    depends_on: "init_cpu"
